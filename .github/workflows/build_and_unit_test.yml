name: build_and_unit_test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize, reopened, edited, ready_for_review ]

# Concurrency control to cancel previous runs on new push to same PR/branch
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref }}
  cancel-in-progress: true  # Automatically cancel any previous runs for the same group

jobs:

  build_and_unit_test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        path: go/src/github.com/greenplum-db/gpbackup

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: "1.20"

    - name: Set Environment
      run: |
        echo "GOPATH=/home/runner/work/gpbackup/gpbackup/go" >> $GITHUB_ENV
        echo "/home/runner/work/gpbackup/gpbackup/go/bin" >> $GITHUB_PATH

    - name: Dependencies
      run: |
        cd ${GOPATH}/src/github.com/greenplum-db/gpbackup
        make depend

    - name: Build
      run: |
        cd ${GOPATH}/src/github.com/greenplum-db/gpbackup
        make build

    - name: Unit Test
      run: |
        cd ${GOPATH}/src/github.com/greenplum-db/gpbackup
        make unit_all_gpdb_versions

  build_and_test:
    name: Regression tests on Greengage ${{ matrix.gg_version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        gg_version: [6]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          filter: tree:0
          submodules: 'recursive'

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./arenadata/Dockerfile
          push: false
          tags: gpbackup:test
          build-args: |
            GPDB_IMAGE=ghcr.io/greengagedb/greengage/ggdb${{ matrix.gg_version }}_ubuntu:latest

      - name: Test
        run: >
          docker run --rm -it
          --sysctl 'kernel.sem=500 1024000 200 4096'
          gpbackup:test
          bash /home/gpadmin/go/src/github.com/greenplum-db/gpbackup/arenadata/run_gpbackup_tests.bash
